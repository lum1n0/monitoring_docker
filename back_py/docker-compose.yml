# docker-compose.yml
#version: '3.8'

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5332:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [monitoring]

  redis:
    image: redis:7-alpine
    networks: [monitoring]

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - ${DOCKER_ROOT_DIR}:/var/lib/docker:ro
    networks: [monitoring]

  prometheus:
    image: prom/prometheus:latest
    command: --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ../prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks: [monitoring]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
    - "9090:9090"  # Пробрось порт

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SERVER_HTTP_PORT=5050
    ports:
      - "5050:5050"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini:ro  # Новый volume для config
    networks: [monitoring]

networks:
  monitoring: {}

volumes:
  postgres_data:
  grafana_data: